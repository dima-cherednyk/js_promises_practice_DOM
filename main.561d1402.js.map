{"version":3,"sources":["scripts/main.js"],"names":["page","document","querySelector","body","clicked","clickedR","addMessage","result","className","div","createElement","setAttribute","textContent","append","firstPromise","Promise","resolve","reject","addEventListener","setTimeout","secondPromise","e","preventDefault","thirdPromise","then","catch","error"],"mappings":";AAAA,aAEA,IAAMA,EAAOC,SAASC,cAAc,QAC9BC,EAAOF,SAASC,cAAc,QAChCE,EAAU,EACVC,EAAW,EAEf,SAASC,EAAWC,EAAQC,GACpBC,IAAAA,EAAMR,SAASS,cAAc,OAEnCD,EAAID,UAAuBA,WAAAA,OAAAA,GAC3BC,EAAIE,aAAa,UAAW,gBAC5BF,EAAIG,YAAcL,EAClBJ,EAAKU,OAAOJ,GAGd,SAASK,IAcA,OAAA,IAAIC,QAbM,SAACC,EAASC,GACzBjB,EAAKkB,iBAAiB,QAAS,WAC7Bd,EAAU,EACVY,EAAQ,gCAGVG,WAAW,WACO,IAAZf,GACFa,EAAO,+BAER,OAcP,SAASG,IAaA,OAAA,IAAIL,QAZM,SAACC,EAASC,GACzBjB,EAAKkB,iBAAiB,QAAS,WAC7BF,EAAQ,iCAGVhB,EAAKkB,iBAAiB,cAAe,SAACG,GACpCA,EAAEC,iBACFjB,EAAW,EACXW,EAAQ,mCAYd,SAASO,IAeA,OAAA,IAAIR,QAdM,SAACC,EAASC,GACzBjB,EAAKkB,iBAAiB,QAAS,WACb,IAAZd,GAA8B,IAAbC,GACnBW,EAAQ,gCAIZhB,EAAKkB,iBAAiB,cAAe,SAACG,GACpB,IAAZjB,GAA8B,IAAbC,GACnBW,EAAQ,kCAvChBF,IACGU,KAAK,SAAAjB,GACJD,EAAWC,EAAQ,aAEpBkB,MAAM,SAAAC,GACLpB,EAAWoB,EAAO,aAmBtBN,IACGI,KAAK,SAAAjB,GACJD,EAAWC,EAAQ,6BAqBvBgB,IACGC,KAAK,SAAAjB,GACJD,EAAWC,EAAQ","file":"main.561d1402.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst page = document.querySelector('html');\nconst body = document.querySelector('body');\nlet clicked = 0;\nlet clickedR = 0;\n\nfunction addMessage(result, className) {\n  const div = document.createElement('div');\n\n  div.className = `message ${className}`;\n  div.setAttribute('data-qa', 'notification');\n  div.textContent = result;\n  body.append(div);\n};\n\nfunction firstPromise() {\n  const resolver = (resolve, reject) => {\n    page.addEventListener('click', () => {\n      clicked = 1;\n      resolve('First promise was resolved');\n    });\n\n    setTimeout(() => {\n      if (clicked === 0) {\n        reject('First promise was rejected');\n      };\n    }, 3000);\n  };\n\n  return new Promise(resolver);\n};\n\nfirstPromise()\n  .then(result => {\n    addMessage(result, 'success');\n  })\n  .catch(error => {\n    addMessage(error, 'warning');\n  });\n\nfunction secondPromise() {\n  const resolver = (resolve, reject) => {\n    page.addEventListener('click', () => {\n      resolve('Second promise was resolved');\n    });\n\n    page.addEventListener('contextmenu', (e) => {\n      e.preventDefault();\n      clickedR = 1;\n      resolve('Second promise was resolved');\n    });\n  };\n\n  return new Promise(resolver);\n};\n\nsecondPromise()\n  .then(result => {\n    addMessage(result, 'message--second success');\n  });\n\nfunction thirdPromise() {\n  const resolver = (resolve, reject) => {\n    page.addEventListener('click', () => {\n      if (clicked === 1 && clickedR === 1) {\n        resolve('Third promise was resolved');\n      };\n    });\n\n    page.addEventListener('contextmenu', (e) => {\n      if (clicked === 1 && clickedR === 1) {\n        resolve('Third promise was resolved');\n      };\n    });\n  };\n\n  return new Promise(resolver);\n};\n\nthirdPromise()\n  .then(result => {\n    addMessage(result, 'message--third success');\n  });\n"]}